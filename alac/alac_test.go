package alac

import (
	"log"
	"testing"
)

func TestNewDecoder(t *testing.T) {

	cookie := []byte{0x00, 0x00, 0x00, 0x24, 0x61, 0x6c, 0x61, 0x63, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x60, 0x00, 0x10, 0x28, 0x0a, 0x0e, 0x02, 0x00, 0xff,0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xac, 0x44}

	_, err := NewDecoder(cookie)
	if err != nil {
		log.Fatalln("Decoder should not be null")
	}

}

func TestDecoder_Decode(t *testing.T) {
	cookie := []byte{0x00, 0x00, 0x00, 0x24, 0x61, 0x6c, 0x61, 0x63, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x60, 0x00, 0x10, 0x28, 0x0a, 0x0e, 0x02, 0x00, 0xff,0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xac, 0x44}
	dec, err := NewDecoder(cookie)
	if err != nil {
		log.Fatalln("Decoder should not be null")
	}
	var output [8192]byte
	_, err = dec.Decode([]byte("616C616300000000000010000010280A0E0200FF000020FA0006AA070000AC44"), output[:], 356, 2)
	if err == nil {
		log.Fatalln("should have a decode error, the frame is false")
	}
}


func TestDecoder_GetMaxFrameBytes(t *testing.T) {

	cookie := []byte{0x00, 0x00, 0x00, 0x24, 0x61, 0x6c, 0x61, 0x63, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x60, 0x00, 0x10, 0x28, 0x0a, 0x0e, 0x02, 0x00, 0xff,0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xac, 0x44}

	dec, err := NewDecoder(cookie)
	if err != nil {
		log.Fatalln("Decoder should not be null")
	}

	value := dec.GetMaxFrameBytes()
	if value != 0 {
		log.Fatalln("Error with max Frame bytes")
	}

}